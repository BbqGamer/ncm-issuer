name: build and test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronized, reopened]

jobs:
  go-versions:
    name: "lookup go versions"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
      go-mod-version: ${{ steps.versions.outputs.go-mod-version }}
    steps:
      - uses: actions/checkout@v3

      - uses: arnested/go-version-action@v1
        id: versions

  unit:
    name: "unit tests"
    needs: go-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ${{ fromJSON(needs.go-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: "setup go"
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: "install dependencies"
        run: go get .

      - name: "test with go"
        run: make test

  golangci:
    name: "lint"
    needs: go-versions
    permissions:
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "setup go"
        uses: actions/setup-go@v3
        with:
          go-version: ${{ fromJSON(needs.go-versions.outputs.go-mod-version) }}

      - name: "golangci-lint"
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.2
          only-new-issues: true

  build:
    name: "build"
    needs: go-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ${{ fromJSON(needs.go-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: "setup go"
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: "build ncm-issuer"
        run: make build

  docker:
    name: "push to registry for e2e tests"
    needs: [unit, golangci, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "log in to docker hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "set up docker buildx"
        uses: docker/setup-buildx-action@v2

      - name: "build and push to docker hub"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ncm-issuer:dev

  e2e:
    name: "e2e tests"
    needs: [docker]
    steps:
      - name: "find CA and enroll"
        uses: ./.github/workflows/find-ca-and-enroll-tests.yml
        secrets: inherit

      - name: "private key"
        uses: ./.github/workflows/pkey-tests.yml
        secrets: inherit

      - name: "san"
        uses: ./.github/workflows/san-test.yml
        secrets: inherit

      - name: "client auth"
        uses: ./.github/workflows/clientauth-test.yml
        secrets: inherit

      - name: "enrollment and renewal"
        uses: ./.github/workflows/enrollment-and-renewal-tests.yml
        secrets: inherit